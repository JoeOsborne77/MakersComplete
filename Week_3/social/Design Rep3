
## 2. Create Test SQL seeds

TRUNCATE TABLE user_accounts RESTART IDENTITY; 

INSERT INTO user_accounts (email_address, username) VALUES 
('peterb@hotmail.co.uk', 'PeterB7'),
('johntyp@gmail.com', 'johnty82'),
('ginag84@gmail.com', 'gina_g');

INSERT INTO timeline_posts (title, content, views, user_account_id) VALUES 
('Today', 'I ate an apple', 5000, 1)
('Yesterday', 'I ate a cookie', 10000, 1)
('Tomorrow', 'I will eat an orange', 3400, 2)
('Next week', 'I will go to the beach', 2000, 2)
('Next year', 'I will turn 184 years old', 1000000, 3)
('Ah but I', 'was so much older then, I am younger than that now', 500, 3)
;

## 3. Define the class names

class User_Account
end

class Timeline_Post
end

class User_Account_Repository
end

class Timeline_Post_Repository
end

## 4. Implement the Model class

Define the attributes of your Model class. You can usually map the table columns to the attributes of the class, including primary and foreign keys.

class User_Account
  attr_accessor :id, :email_address, :username
end

class Timeline_Post
  attr_accessor :id, :title, :content, :views, :user_account_id
end


## 5. Define the Repository Class interface
You should test-drive and implement the four methods all, find, create and delete for each Repository class.

  class User_Account_Repository
    def all
      sql = SELECT id, email_address, username FROM user_accounts
      
    end

    def find(id)
      sql = SELECT id, email_address, username FROM user_accounts WHERE id = $id

    end

    def create(user)
      sql = INSERT INTO user_accounts (id, email_address, username) VALUES ($1, $2, $3)
    end

    def delete(id)
      sql = DELETE FROM user_accounts WHERE id = $id
    end

  end
  
  class Timeline_Post_Repository
    def all
      sql = SELECT id, title, content, views, user_account_id FROM timeline_posts
    end

    def find(id)
      sql = SELECT id, title, content, views, user_account_id FROM timeline_posts WHERE id = $id
    end

    def create(user)
      sql = INSERT INTO timeline_posts (id, title, content, views, user_account_id) VALUES ($1, $2, $3, $4, $5)
    end

    def delete(id)
      sql = DELET FROM timeline_posts WHERE id = $id
    end
  end
  
## 6. Write Test Examples

uar = User_Account_Repository.new
ua = User_Account.new
all_users = uar.all

expect(all_users.email_address[2]).to eq 'ginag84@gmail.com'

